/**
 * ****************************************************************************
 * Dependency on Azkaban SPI. Since Azkaban doesn't have it's jars published
 * anywhere, we use our own custom build and repository.
 * ****************************************************************************
 */
def azkabanVersion = "3.18.0"

dependencies {
    compileOnly("ai.databand.azkaban:azkaban-spi:${azkabanVersion}") {
        transitive = false
    }
    compileOnly("ai.databand.azkaban:azkaban-common:${azkabanVersion}"){
        transitive = false
    }
    compileOnly("ai.databand.azkaban:azkaban-exec-server:${azkabanVersion}"){
        transitive = false
    }
    compileOnly("ai.databand.azkaban:azkaban-web-server:${azkabanVersion}"){
        transitive = false
    }

    implementation("com.fasterxml.jackson.core:jackson-databind:2.14.1") {
        transitive = false
    }
    implementation("com.fasterxml.jackson.core:jackson-core:2.14.1") {
        transitive = false
    }
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.14.1") {
        transitive = false
    }

    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

/**
 * ****************************************************************************
 * Deequ should be excluded from all configurations because it's provided.
 * ****************************************************************************
 */
configurations.all {
    exclude group: "com.amazon.deequ", module: "deequ"
}

/**
 * ****************************************************************************
 * Agent configuration.
 * ****************************************************************************
 */
jar {
    manifest {
        attributes(
            'Premain-Class': 'ai.databand.azkaban.agent.DbndAgent',
            'Can-Redefine-Classes': 'true',
            'Can-Retransform-Classes': 'true',
            'Can-Set-Native-Method-Prefix': 'true',
            'Implementation-Title': 'DbndAgent',
            'Implementation-Version': rootProject.version
        )
    }
}

/**
 * ****************************************************************************
 * We don't want all transitive dependencies to be included into fatjar.
 * Spark is provided dependency and we need to include only databand, retrofit,
 * slf4j, javassist and fasterxml.
 *
 * Fasterxml should be relocated to different package because azkaban brings
 * very old version of fasterxml as a transitive dependency and retrofit
 * unable to work with it
 * ****************************************************************************
 */
shadowJar {
    dependencies {
        exclude(dependency {
            !it.moduleGroup.contains('databand') \
               && !it.moduleGroup.contains('squareup') \
               && !it.moduleGroup.contains('ch.qos.logback') \
               && !it.moduleGroup.contains('javassist') \
               && !it.moduleGroup.contains('com.fasterxml') \
               && !it.moduleGroup.contains("org.jetbrains.kotlin")
        })
    }
    relocate "okio", "shadow.okio"
    relocate "okhttp3", "shadow.okhttp3"
    relocate "com.fasterxml", 'shadow.com.fasterxml'
    relocate "kotlin", "shadow.kotlin"
}
