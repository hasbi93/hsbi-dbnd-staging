configurations.all {
    /**
     * If we bundle Deequ into agent, DbndMetricsRepository class won't be found
     * because it will be loaded from root classloader while Deequ classes most
     * likely will be loaded from child spark classloader. This will result in
     * NoClassDefFoundError, because root classloader don't see classes from the child classloader.
     * dbnd-api-deequ should be added to the classpath separately.
     */
    exclude group: "ai.databand", module: "dbnd-api-deequ"
    exclude group: "org.apache.spark"
}

jar {
    manifest {
        attributes(
            'Premain-Class': 'ai.databand.agent.DbndAgent',
            'Can-Redefine-Classes': 'true',
            'Can-Retransform-Classes': 'true',
            'Can-Set-Native-Method-Prefix': 'true',
            'Implementation-Title': 'DbndAgent',
            'Implementation-Version': rootProject.version
        )
    }
}

/**
 * ****************************************************************************
 * We don't want all transitive dependencies to be included into fatjar.
 * Spark is provided dependency and we need to include only databand, retrofit,
 * slf4j and javassist.
 * ****************************************************************************
 */
shadowJar {
    dependencies {
        exclude(dependency {
            !it.moduleGroup.contains('databand') \
              && !it.moduleGroup.contains('squareup') \
              && !it.moduleGroup.contains('ch.qos.logback') \
              && !it.moduleGroup.contains('javassist') \
              && !it.moduleGroup.contains("org.jetbrains.kotlin")
        })
    }
    relocate "okio", "shadow.okio"
    relocate "okhttp3", "shadow.okhttp3"
    relocate "kotlin", "shadow.kotlin"
}
